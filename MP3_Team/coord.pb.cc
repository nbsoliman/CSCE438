// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: coord.proto

#include "coord.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace csce438 {
constexpr CoordRequest::CoordRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : client_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CoordRequestDefaultTypeInternal {
  constexpr CoordRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CoordRequestDefaultTypeInternal() {}
  union {
    CoordRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CoordRequestDefaultTypeInternal _CoordRequest_default_instance_;
constexpr CoordReply::CoordReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : server_ip_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , server_port_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CoordReplyDefaultTypeInternal {
  constexpr CoordReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CoordReplyDefaultTypeInternal() {}
  union {
    CoordReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CoordReplyDefaultTypeInternal _CoordReply_default_instance_;
constexpr CoordMessage::CoordMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : server_ip_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , server_port2_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , server_type_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CoordMessageDefaultTypeInternal {
  constexpr CoordMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CoordMessageDefaultTypeInternal() {}
  union {
    CoordMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CoordMessageDefaultTypeInternal _CoordMessage_default_instance_;
constexpr MasterRequest::MasterRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : server_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct MasterRequestDefaultTypeInternal {
  constexpr MasterRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MasterRequestDefaultTypeInternal() {}
  union {
    MasterRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MasterRequestDefaultTypeInternal _MasterRequest_default_instance_;
constexpr MasterReply::MasterReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : slave_ip_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , slave_port_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct MasterReplyDefaultTypeInternal {
  constexpr MasterReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MasterReplyDefaultTypeInternal() {}
  union {
    MasterReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MasterReplyDefaultTypeInternal _MasterReply_default_instance_;
constexpr FollowerSyncRTInfo::FollowerSyncRTInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : sync_ip_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sync_port_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sync_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct FollowerSyncRTInfoDefaultTypeInternal {
  constexpr FollowerSyncRTInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FollowerSyncRTInfoDefaultTypeInternal() {}
  union {
    FollowerSyncRTInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FollowerSyncRTInfoDefaultTypeInternal _FollowerSyncRTInfo_default_instance_;
constexpr ClientInfo::ClientInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : client_id2_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ClientInfoDefaultTypeInternal {
  constexpr ClientInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ClientInfoDefaultTypeInternal() {}
  union {
    ClientInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ClientInfoDefaultTypeInternal _ClientInfo_default_instance_;
constexpr FollowerSyncInfo::FollowerSyncInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : sync_ip_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sync_port_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sync_id2_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct FollowerSyncInfoDefaultTypeInternal {
  constexpr FollowerSyncInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FollowerSyncInfoDefaultTypeInternal() {}
  union {
    FollowerSyncInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FollowerSyncInfoDefaultTypeInternal _FollowerSyncInfo_default_instance_;
constexpr SyncIdInfo::SyncIdInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : sync_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct SyncIdInfoDefaultTypeInternal {
  constexpr SyncIdInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SyncIdInfoDefaultTypeInternal() {}
  union {
    SyncIdInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SyncIdInfoDefaultTypeInternal _SyncIdInfo_default_instance_;
constexpr ClusterInfo::ClusterInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : cluster_clients_(){}
struct ClusterInfoDefaultTypeInternal {
  constexpr ClusterInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ClusterInfoDefaultTypeInternal() {}
  union {
    ClusterInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ClusterInfoDefaultTypeInternal _ClusterInfo_default_instance_;
}  // namespace csce438
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_coord_2eproto[10];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_coord_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_coord_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_coord_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::csce438::CoordRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::csce438::CoordRequest, client_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::csce438::CoordReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::csce438::CoordReply, server_ip_address_),
  PROTOBUF_FIELD_OFFSET(::csce438::CoordReply, server_port_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::csce438::CoordMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::csce438::CoordMessage, server_ip_),
  PROTOBUF_FIELD_OFFSET(::csce438::CoordMessage, server_port2_),
  PROTOBUF_FIELD_OFFSET(::csce438::CoordMessage, status_),
  PROTOBUF_FIELD_OFFSET(::csce438::CoordMessage, server_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::csce438::MasterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::csce438::MasterRequest, server_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::csce438::MasterReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::csce438::MasterReply, slave_ip_),
  PROTOBUF_FIELD_OFFSET(::csce438::MasterReply, slave_port_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::csce438::FollowerSyncRTInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::csce438::FollowerSyncRTInfo, sync_ip_address_),
  PROTOBUF_FIELD_OFFSET(::csce438::FollowerSyncRTInfo, sync_port_),
  PROTOBUF_FIELD_OFFSET(::csce438::FollowerSyncRTInfo, sync_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::csce438::ClientInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::csce438::ClientInfo, client_id2_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::csce438::FollowerSyncInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::csce438::FollowerSyncInfo, sync_ip_address_),
  PROTOBUF_FIELD_OFFSET(::csce438::FollowerSyncInfo, sync_port_),
  PROTOBUF_FIELD_OFFSET(::csce438::FollowerSyncInfo, sync_id2_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::csce438::SyncIdInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::csce438::SyncIdInfo, sync_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::csce438::ClusterInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::csce438::ClusterInfo, cluster_clients_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::csce438::CoordRequest)},
  { 7, -1, -1, sizeof(::csce438::CoordReply)},
  { 15, -1, -1, sizeof(::csce438::CoordMessage)},
  { 25, -1, -1, sizeof(::csce438::MasterRequest)},
  { 32, -1, -1, sizeof(::csce438::MasterReply)},
  { 40, -1, -1, sizeof(::csce438::FollowerSyncRTInfo)},
  { 49, -1, -1, sizeof(::csce438::ClientInfo)},
  { 56, -1, -1, sizeof(::csce438::FollowerSyncInfo)},
  { 65, -1, -1, sizeof(::csce438::SyncIdInfo)},
  { 72, -1, -1, sizeof(::csce438::ClusterInfo)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::csce438::_CoordRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::csce438::_CoordReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::csce438::_CoordMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::csce438::_MasterRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::csce438::_MasterReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::csce438::_FollowerSyncRTInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::csce438::_ClientInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::csce438::_FollowerSyncInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::csce438::_SyncIdInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::csce438::_ClusterInfo_default_instance_),
};

const char descriptor_table_protodef_coord_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\013coord.proto\022\007csce438\032\037google/protobuf/"
  "timestamp.proto\"!\n\014CoordRequest\022\021\n\tclien"
  "t_id\030\001 \001(\t\"<\n\nCoordReply\022\031\n\021server_ip_ad"
  "dress\030\001 \001(\t\022\023\n\013server_port\030\002 \001(\t\"\\\n\014Coor"
  "dMessage\022\021\n\tserver_ip\030\001 \001(\t\022\024\n\014server_po"
  "rt2\030\002 \001(\t\022\016\n\006status\030\003 \001(\t\022\023\n\013server_type"
  "\030\004 \001(\t\"\"\n\rMasterRequest\022\021\n\tserver_id\030\001 \001"
  "(\t\"3\n\013MasterReply\022\020\n\010slave_ip\030\001 \001(\t\022\022\n\ns"
  "lave_port\030\002 \001(\t\"Q\n\022FollowerSyncRTInfo\022\027\n"
  "\017sync_ip_address\030\001 \001(\t\022\021\n\tsync_port\030\002 \001("
  "\t\022\017\n\007sync_id\030\003 \001(\t\" \n\nClientInfo\022\022\n\nclie"
  "nt_id2\030\001 \001(\t\"P\n\020FollowerSyncInfo\022\027\n\017sync"
  "_ip_address\030\001 \001(\t\022\021\n\tsync_port\030\002 \001(\t\022\020\n\010"
  "sync_id2\030\003 \001(\t\"\035\n\nSyncIdInfo\022\017\n\007sync_id\030"
  "\001 \001(\t\"&\n\013ClusterInfo\022\027\n\017cluster_clients\030"
  "\001 \003(\t2\225\003\n\010SNSCoord\0226\n\006Access\022\025.csce438.C"
  "oordRequest\032\023.csce438.CoordReply\"\000\022\?\n\tHe"
  "artbeat\022\025.csce438.CoordMessage\032\025.csce438"
  ".CoordMessage\"\000(\0010\001\022>\n\014GetSlaveInfo\022\026.cs"
  "ce438.MasterRequest\032\024.csce438.MasterRepl"
  "y\"\000\022H\n\022FillFollowerSyncRT\022\033.csce438.Foll"
  "owerSyncRTInfo\032\023.csce438.SyncIdInfo\"\000\022G\n"
  "\023GetFollowerSyncInfo\022\023.csce438.ClientInf"
  "o\032\031.csce438.FollowerSyncInfo\"\000\022=\n\016GetClu"
  "sterInfo\022\023.csce438.SyncIdInfo\032\024.csce438."
  "ClusterInfo\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_coord_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_coord_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_coord_2eproto = {
  false, false, 1021, descriptor_table_protodef_coord_2eproto, "coord.proto", 
  &descriptor_table_coord_2eproto_once, descriptor_table_coord_2eproto_deps, 1, 10,
  schemas, file_default_instances, TableStruct_coord_2eproto::offsets,
  file_level_metadata_coord_2eproto, file_level_enum_descriptors_coord_2eproto, file_level_service_descriptors_coord_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_coord_2eproto_getter() {
  return &descriptor_table_coord_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_coord_2eproto(&descriptor_table_coord_2eproto);
namespace csce438 {

// ===================================================================

class CoordRequest::_Internal {
 public:
};

CoordRequest::CoordRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:csce438.CoordRequest)
}
CoordRequest::CoordRequest(const CoordRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  client_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_client_id().empty()) {
    client_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_client_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:csce438.CoordRequest)
}

void CoordRequest::SharedCtor() {
client_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CoordRequest::~CoordRequest() {
  // @@protoc_insertion_point(destructor:csce438.CoordRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CoordRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  client_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CoordRequest::ArenaDtor(void* object) {
  CoordRequest* _this = reinterpret_cast< CoordRequest* >(object);
  (void)_this;
}
void CoordRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CoordRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CoordRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:csce438.CoordRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  client_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CoordRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string client_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_client_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "csce438.CoordRequest.client_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CoordRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csce438.CoordRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string client_id = 1;
  if (!this->_internal_client_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_id().data(), static_cast<int>(this->_internal_client_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "csce438.CoordRequest.client_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_client_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csce438.CoordRequest)
  return target;
}

size_t CoordRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csce438.CoordRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string client_id = 1;
  if (!this->_internal_client_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CoordRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CoordRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CoordRequest::GetClassData() const { return &_class_data_; }

void CoordRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CoordRequest *>(to)->MergeFrom(
      static_cast<const CoordRequest &>(from));
}


void CoordRequest::MergeFrom(const CoordRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:csce438.CoordRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_client_id().empty()) {
    _internal_set_client_id(from._internal_client_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CoordRequest::CopyFrom(const CoordRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csce438.CoordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CoordRequest::IsInitialized() const {
  return true;
}

void CoordRequest::InternalSwap(CoordRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &client_id_, lhs_arena,
      &other->client_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CoordRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_coord_2eproto_getter, &descriptor_table_coord_2eproto_once,
      file_level_metadata_coord_2eproto[0]);
}

// ===================================================================

class CoordReply::_Internal {
 public:
};

CoordReply::CoordReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:csce438.CoordReply)
}
CoordReply::CoordReply(const CoordReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  server_ip_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_server_ip_address().empty()) {
    server_ip_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_server_ip_address(), 
      GetArenaForAllocation());
  }
  server_port_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_server_port().empty()) {
    server_port_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_server_port(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:csce438.CoordReply)
}

void CoordReply::SharedCtor() {
server_ip_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
server_port_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CoordReply::~CoordReply() {
  // @@protoc_insertion_point(destructor:csce438.CoordReply)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CoordReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  server_ip_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  server_port_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CoordReply::ArenaDtor(void* object) {
  CoordReply* _this = reinterpret_cast< CoordReply* >(object);
  (void)_this;
}
void CoordReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CoordReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CoordReply::Clear() {
// @@protoc_insertion_point(message_clear_start:csce438.CoordReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_ip_address_.ClearToEmpty();
  server_port_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CoordReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string server_ip_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_server_ip_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "csce438.CoordReply.server_ip_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string server_port = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_server_port();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "csce438.CoordReply.server_port"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CoordReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csce438.CoordReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server_ip_address = 1;
  if (!this->_internal_server_ip_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_server_ip_address().data(), static_cast<int>(this->_internal_server_ip_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "csce438.CoordReply.server_ip_address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_server_ip_address(), target);
  }

  // string server_port = 2;
  if (!this->_internal_server_port().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_server_port().data(), static_cast<int>(this->_internal_server_port().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "csce438.CoordReply.server_port");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_server_port(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csce438.CoordReply)
  return target;
}

size_t CoordReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csce438.CoordReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string server_ip_address = 1;
  if (!this->_internal_server_ip_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_server_ip_address());
  }

  // string server_port = 2;
  if (!this->_internal_server_port().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_server_port());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CoordReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CoordReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CoordReply::GetClassData() const { return &_class_data_; }

void CoordReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CoordReply *>(to)->MergeFrom(
      static_cast<const CoordReply &>(from));
}


void CoordReply::MergeFrom(const CoordReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:csce438.CoordReply)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_server_ip_address().empty()) {
    _internal_set_server_ip_address(from._internal_server_ip_address());
  }
  if (!from._internal_server_port().empty()) {
    _internal_set_server_port(from._internal_server_port());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CoordReply::CopyFrom(const CoordReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csce438.CoordReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CoordReply::IsInitialized() const {
  return true;
}

void CoordReply::InternalSwap(CoordReply* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &server_ip_address_, lhs_arena,
      &other->server_ip_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &server_port_, lhs_arena,
      &other->server_port_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CoordReply::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_coord_2eproto_getter, &descriptor_table_coord_2eproto_once,
      file_level_metadata_coord_2eproto[1]);
}

// ===================================================================

class CoordMessage::_Internal {
 public:
};

CoordMessage::CoordMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:csce438.CoordMessage)
}
CoordMessage::CoordMessage(const CoordMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  server_ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_server_ip().empty()) {
    server_ip_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_server_ip(), 
      GetArenaForAllocation());
  }
  server_port2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_server_port2().empty()) {
    server_port2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_server_port2(), 
      GetArenaForAllocation());
  }
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  server_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_server_type().empty()) {
    server_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_server_type(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:csce438.CoordMessage)
}

void CoordMessage::SharedCtor() {
server_ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
server_port2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
server_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CoordMessage::~CoordMessage() {
  // @@protoc_insertion_point(destructor:csce438.CoordMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CoordMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  server_ip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  server_port2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  server_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CoordMessage::ArenaDtor(void* object) {
  CoordMessage* _this = reinterpret_cast< CoordMessage* >(object);
  (void)_this;
}
void CoordMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CoordMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CoordMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:csce438.CoordMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_ip_.ClearToEmpty();
  server_port2_.ClearToEmpty();
  status_.ClearToEmpty();
  server_type_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CoordMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string server_ip = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_server_ip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "csce438.CoordMessage.server_ip"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string server_port2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_server_port2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "csce438.CoordMessage.server_port2"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string status = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "csce438.CoordMessage.status"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string server_type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_server_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "csce438.CoordMessage.server_type"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CoordMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csce438.CoordMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server_ip = 1;
  if (!this->_internal_server_ip().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_server_ip().data(), static_cast<int>(this->_internal_server_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "csce438.CoordMessage.server_ip");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_server_ip(), target);
  }

  // string server_port2 = 2;
  if (!this->_internal_server_port2().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_server_port2().data(), static_cast<int>(this->_internal_server_port2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "csce438.CoordMessage.server_port2");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_server_port2(), target);
  }

  // string status = 3;
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "csce438.CoordMessage.status");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_status(), target);
  }

  // string server_type = 4;
  if (!this->_internal_server_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_server_type().data(), static_cast<int>(this->_internal_server_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "csce438.CoordMessage.server_type");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_server_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csce438.CoordMessage)
  return target;
}

size_t CoordMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csce438.CoordMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string server_ip = 1;
  if (!this->_internal_server_ip().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_server_ip());
  }

  // string server_port2 = 2;
  if (!this->_internal_server_port2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_server_port2());
  }

  // string status = 3;
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  // string server_type = 4;
  if (!this->_internal_server_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_server_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CoordMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CoordMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CoordMessage::GetClassData() const { return &_class_data_; }

void CoordMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CoordMessage *>(to)->MergeFrom(
      static_cast<const CoordMessage &>(from));
}


void CoordMessage::MergeFrom(const CoordMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:csce438.CoordMessage)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_server_ip().empty()) {
    _internal_set_server_ip(from._internal_server_ip());
  }
  if (!from._internal_server_port2().empty()) {
    _internal_set_server_port2(from._internal_server_port2());
  }
  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  if (!from._internal_server_type().empty()) {
    _internal_set_server_type(from._internal_server_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CoordMessage::CopyFrom(const CoordMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csce438.CoordMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CoordMessage::IsInitialized() const {
  return true;
}

void CoordMessage::InternalSwap(CoordMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &server_ip_, lhs_arena,
      &other->server_ip_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &server_port2_, lhs_arena,
      &other->server_port2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, lhs_arena,
      &other->status_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &server_type_, lhs_arena,
      &other->server_type_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CoordMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_coord_2eproto_getter, &descriptor_table_coord_2eproto_once,
      file_level_metadata_coord_2eproto[2]);
}

// ===================================================================

class MasterRequest::_Internal {
 public:
};

MasterRequest::MasterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:csce438.MasterRequest)
}
MasterRequest::MasterRequest(const MasterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  server_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_server_id().empty()) {
    server_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_server_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:csce438.MasterRequest)
}

void MasterRequest::SharedCtor() {
server_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

MasterRequest::~MasterRequest() {
  // @@protoc_insertion_point(destructor:csce438.MasterRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void MasterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  server_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MasterRequest::ArenaDtor(void* object) {
  MasterRequest* _this = reinterpret_cast< MasterRequest* >(object);
  (void)_this;
}
void MasterRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MasterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MasterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:csce438.MasterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MasterRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string server_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_server_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "csce438.MasterRequest.server_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MasterRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csce438.MasterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server_id = 1;
  if (!this->_internal_server_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_server_id().data(), static_cast<int>(this->_internal_server_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "csce438.MasterRequest.server_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_server_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csce438.MasterRequest)
  return target;
}

size_t MasterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csce438.MasterRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string server_id = 1;
  if (!this->_internal_server_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_server_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MasterRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MasterRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MasterRequest::GetClassData() const { return &_class_data_; }

void MasterRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MasterRequest *>(to)->MergeFrom(
      static_cast<const MasterRequest &>(from));
}


void MasterRequest::MergeFrom(const MasterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:csce438.MasterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_server_id().empty()) {
    _internal_set_server_id(from._internal_server_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MasterRequest::CopyFrom(const MasterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csce438.MasterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MasterRequest::IsInitialized() const {
  return true;
}

void MasterRequest::InternalSwap(MasterRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &server_id_, lhs_arena,
      &other->server_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata MasterRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_coord_2eproto_getter, &descriptor_table_coord_2eproto_once,
      file_level_metadata_coord_2eproto[3]);
}

// ===================================================================

class MasterReply::_Internal {
 public:
};

MasterReply::MasterReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:csce438.MasterReply)
}
MasterReply::MasterReply(const MasterReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  slave_ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_slave_ip().empty()) {
    slave_ip_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_slave_ip(), 
      GetArenaForAllocation());
  }
  slave_port_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_slave_port().empty()) {
    slave_port_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_slave_port(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:csce438.MasterReply)
}

void MasterReply::SharedCtor() {
slave_ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
slave_port_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

MasterReply::~MasterReply() {
  // @@protoc_insertion_point(destructor:csce438.MasterReply)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void MasterReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  slave_ip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  slave_port_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MasterReply::ArenaDtor(void* object) {
  MasterReply* _this = reinterpret_cast< MasterReply* >(object);
  (void)_this;
}
void MasterReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MasterReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MasterReply::Clear() {
// @@protoc_insertion_point(message_clear_start:csce438.MasterReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  slave_ip_.ClearToEmpty();
  slave_port_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MasterReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string slave_ip = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_slave_ip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "csce438.MasterReply.slave_ip"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string slave_port = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_slave_port();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "csce438.MasterReply.slave_port"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MasterReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csce438.MasterReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string slave_ip = 1;
  if (!this->_internal_slave_ip().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_slave_ip().data(), static_cast<int>(this->_internal_slave_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "csce438.MasterReply.slave_ip");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_slave_ip(), target);
  }

  // string slave_port = 2;
  if (!this->_internal_slave_port().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_slave_port().data(), static_cast<int>(this->_internal_slave_port().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "csce438.MasterReply.slave_port");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_slave_port(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csce438.MasterReply)
  return target;
}

size_t MasterReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csce438.MasterReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string slave_ip = 1;
  if (!this->_internal_slave_ip().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_slave_ip());
  }

  // string slave_port = 2;
  if (!this->_internal_slave_port().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_slave_port());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MasterReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MasterReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MasterReply::GetClassData() const { return &_class_data_; }

void MasterReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MasterReply *>(to)->MergeFrom(
      static_cast<const MasterReply &>(from));
}


void MasterReply::MergeFrom(const MasterReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:csce438.MasterReply)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_slave_ip().empty()) {
    _internal_set_slave_ip(from._internal_slave_ip());
  }
  if (!from._internal_slave_port().empty()) {
    _internal_set_slave_port(from._internal_slave_port());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MasterReply::CopyFrom(const MasterReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csce438.MasterReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MasterReply::IsInitialized() const {
  return true;
}

void MasterReply::InternalSwap(MasterReply* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &slave_ip_, lhs_arena,
      &other->slave_ip_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &slave_port_, lhs_arena,
      &other->slave_port_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata MasterReply::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_coord_2eproto_getter, &descriptor_table_coord_2eproto_once,
      file_level_metadata_coord_2eproto[4]);
}

// ===================================================================

class FollowerSyncRTInfo::_Internal {
 public:
};

FollowerSyncRTInfo::FollowerSyncRTInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:csce438.FollowerSyncRTInfo)
}
FollowerSyncRTInfo::FollowerSyncRTInfo(const FollowerSyncRTInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sync_ip_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sync_ip_address().empty()) {
    sync_ip_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sync_ip_address(), 
      GetArenaForAllocation());
  }
  sync_port_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sync_port().empty()) {
    sync_port_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sync_port(), 
      GetArenaForAllocation());
  }
  sync_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sync_id().empty()) {
    sync_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sync_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:csce438.FollowerSyncRTInfo)
}

void FollowerSyncRTInfo::SharedCtor() {
sync_ip_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
sync_port_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
sync_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

FollowerSyncRTInfo::~FollowerSyncRTInfo() {
  // @@protoc_insertion_point(destructor:csce438.FollowerSyncRTInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void FollowerSyncRTInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  sync_ip_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sync_port_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sync_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FollowerSyncRTInfo::ArenaDtor(void* object) {
  FollowerSyncRTInfo* _this = reinterpret_cast< FollowerSyncRTInfo* >(object);
  (void)_this;
}
void FollowerSyncRTInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FollowerSyncRTInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FollowerSyncRTInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:csce438.FollowerSyncRTInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sync_ip_address_.ClearToEmpty();
  sync_port_.ClearToEmpty();
  sync_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FollowerSyncRTInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sync_ip_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_sync_ip_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "csce438.FollowerSyncRTInfo.sync_ip_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string sync_port = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_sync_port();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "csce438.FollowerSyncRTInfo.sync_port"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string sync_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_sync_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "csce438.FollowerSyncRTInfo.sync_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FollowerSyncRTInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csce438.FollowerSyncRTInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sync_ip_address = 1;
  if (!this->_internal_sync_ip_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sync_ip_address().data(), static_cast<int>(this->_internal_sync_ip_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "csce438.FollowerSyncRTInfo.sync_ip_address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_sync_ip_address(), target);
  }

  // string sync_port = 2;
  if (!this->_internal_sync_port().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sync_port().data(), static_cast<int>(this->_internal_sync_port().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "csce438.FollowerSyncRTInfo.sync_port");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_sync_port(), target);
  }

  // string sync_id = 3;
  if (!this->_internal_sync_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sync_id().data(), static_cast<int>(this->_internal_sync_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "csce438.FollowerSyncRTInfo.sync_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_sync_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csce438.FollowerSyncRTInfo)
  return target;
}

size_t FollowerSyncRTInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csce438.FollowerSyncRTInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sync_ip_address = 1;
  if (!this->_internal_sync_ip_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sync_ip_address());
  }

  // string sync_port = 2;
  if (!this->_internal_sync_port().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sync_port());
  }

  // string sync_id = 3;
  if (!this->_internal_sync_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sync_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FollowerSyncRTInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FollowerSyncRTInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FollowerSyncRTInfo::GetClassData() const { return &_class_data_; }

void FollowerSyncRTInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FollowerSyncRTInfo *>(to)->MergeFrom(
      static_cast<const FollowerSyncRTInfo &>(from));
}


void FollowerSyncRTInfo::MergeFrom(const FollowerSyncRTInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:csce438.FollowerSyncRTInfo)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sync_ip_address().empty()) {
    _internal_set_sync_ip_address(from._internal_sync_ip_address());
  }
  if (!from._internal_sync_port().empty()) {
    _internal_set_sync_port(from._internal_sync_port());
  }
  if (!from._internal_sync_id().empty()) {
    _internal_set_sync_id(from._internal_sync_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FollowerSyncRTInfo::CopyFrom(const FollowerSyncRTInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csce438.FollowerSyncRTInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FollowerSyncRTInfo::IsInitialized() const {
  return true;
}

void FollowerSyncRTInfo::InternalSwap(FollowerSyncRTInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sync_ip_address_, lhs_arena,
      &other->sync_ip_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sync_port_, lhs_arena,
      &other->sync_port_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sync_id_, lhs_arena,
      &other->sync_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata FollowerSyncRTInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_coord_2eproto_getter, &descriptor_table_coord_2eproto_once,
      file_level_metadata_coord_2eproto[5]);
}

// ===================================================================

class ClientInfo::_Internal {
 public:
};

ClientInfo::ClientInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:csce438.ClientInfo)
}
ClientInfo::ClientInfo(const ClientInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  client_id2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_client_id2().empty()) {
    client_id2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_client_id2(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:csce438.ClientInfo)
}

void ClientInfo::SharedCtor() {
client_id2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ClientInfo::~ClientInfo() {
  // @@protoc_insertion_point(destructor:csce438.ClientInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ClientInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  client_id2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ClientInfo::ArenaDtor(void* object) {
  ClientInfo* _this = reinterpret_cast< ClientInfo* >(object);
  (void)_this;
}
void ClientInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClientInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ClientInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:csce438.ClientInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  client_id2_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClientInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string client_id2 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_client_id2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "csce438.ClientInfo.client_id2"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClientInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csce438.ClientInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string client_id2 = 1;
  if (!this->_internal_client_id2().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_client_id2().data(), static_cast<int>(this->_internal_client_id2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "csce438.ClientInfo.client_id2");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_client_id2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csce438.ClientInfo)
  return target;
}

size_t ClientInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csce438.ClientInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string client_id2 = 1;
  if (!this->_internal_client_id2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_client_id2());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ClientInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ClientInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ClientInfo::GetClassData() const { return &_class_data_; }

void ClientInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ClientInfo *>(to)->MergeFrom(
      static_cast<const ClientInfo &>(from));
}


void ClientInfo::MergeFrom(const ClientInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:csce438.ClientInfo)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_client_id2().empty()) {
    _internal_set_client_id2(from._internal_client_id2());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ClientInfo::CopyFrom(const ClientInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csce438.ClientInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientInfo::IsInitialized() const {
  return true;
}

void ClientInfo::InternalSwap(ClientInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &client_id2_, lhs_arena,
      &other->client_id2_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ClientInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_coord_2eproto_getter, &descriptor_table_coord_2eproto_once,
      file_level_metadata_coord_2eproto[6]);
}

// ===================================================================

class FollowerSyncInfo::_Internal {
 public:
};

FollowerSyncInfo::FollowerSyncInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:csce438.FollowerSyncInfo)
}
FollowerSyncInfo::FollowerSyncInfo(const FollowerSyncInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sync_ip_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sync_ip_address().empty()) {
    sync_ip_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sync_ip_address(), 
      GetArenaForAllocation());
  }
  sync_port_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sync_port().empty()) {
    sync_port_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sync_port(), 
      GetArenaForAllocation());
  }
  sync_id2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sync_id2().empty()) {
    sync_id2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sync_id2(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:csce438.FollowerSyncInfo)
}

void FollowerSyncInfo::SharedCtor() {
sync_ip_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
sync_port_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
sync_id2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

FollowerSyncInfo::~FollowerSyncInfo() {
  // @@protoc_insertion_point(destructor:csce438.FollowerSyncInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void FollowerSyncInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  sync_ip_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sync_port_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sync_id2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FollowerSyncInfo::ArenaDtor(void* object) {
  FollowerSyncInfo* _this = reinterpret_cast< FollowerSyncInfo* >(object);
  (void)_this;
}
void FollowerSyncInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FollowerSyncInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FollowerSyncInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:csce438.FollowerSyncInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sync_ip_address_.ClearToEmpty();
  sync_port_.ClearToEmpty();
  sync_id2_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FollowerSyncInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sync_ip_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_sync_ip_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "csce438.FollowerSyncInfo.sync_ip_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string sync_port = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_sync_port();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "csce438.FollowerSyncInfo.sync_port"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string sync_id2 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_sync_id2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "csce438.FollowerSyncInfo.sync_id2"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FollowerSyncInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csce438.FollowerSyncInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sync_ip_address = 1;
  if (!this->_internal_sync_ip_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sync_ip_address().data(), static_cast<int>(this->_internal_sync_ip_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "csce438.FollowerSyncInfo.sync_ip_address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_sync_ip_address(), target);
  }

  // string sync_port = 2;
  if (!this->_internal_sync_port().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sync_port().data(), static_cast<int>(this->_internal_sync_port().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "csce438.FollowerSyncInfo.sync_port");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_sync_port(), target);
  }

  // string sync_id2 = 3;
  if (!this->_internal_sync_id2().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sync_id2().data(), static_cast<int>(this->_internal_sync_id2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "csce438.FollowerSyncInfo.sync_id2");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_sync_id2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csce438.FollowerSyncInfo)
  return target;
}

size_t FollowerSyncInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csce438.FollowerSyncInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sync_ip_address = 1;
  if (!this->_internal_sync_ip_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sync_ip_address());
  }

  // string sync_port = 2;
  if (!this->_internal_sync_port().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sync_port());
  }

  // string sync_id2 = 3;
  if (!this->_internal_sync_id2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sync_id2());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FollowerSyncInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FollowerSyncInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FollowerSyncInfo::GetClassData() const { return &_class_data_; }

void FollowerSyncInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FollowerSyncInfo *>(to)->MergeFrom(
      static_cast<const FollowerSyncInfo &>(from));
}


void FollowerSyncInfo::MergeFrom(const FollowerSyncInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:csce438.FollowerSyncInfo)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sync_ip_address().empty()) {
    _internal_set_sync_ip_address(from._internal_sync_ip_address());
  }
  if (!from._internal_sync_port().empty()) {
    _internal_set_sync_port(from._internal_sync_port());
  }
  if (!from._internal_sync_id2().empty()) {
    _internal_set_sync_id2(from._internal_sync_id2());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FollowerSyncInfo::CopyFrom(const FollowerSyncInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csce438.FollowerSyncInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FollowerSyncInfo::IsInitialized() const {
  return true;
}

void FollowerSyncInfo::InternalSwap(FollowerSyncInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sync_ip_address_, lhs_arena,
      &other->sync_ip_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sync_port_, lhs_arena,
      &other->sync_port_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sync_id2_, lhs_arena,
      &other->sync_id2_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata FollowerSyncInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_coord_2eproto_getter, &descriptor_table_coord_2eproto_once,
      file_level_metadata_coord_2eproto[7]);
}

// ===================================================================

class SyncIdInfo::_Internal {
 public:
};

SyncIdInfo::SyncIdInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:csce438.SyncIdInfo)
}
SyncIdInfo::SyncIdInfo(const SyncIdInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sync_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sync_id().empty()) {
    sync_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sync_id(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:csce438.SyncIdInfo)
}

void SyncIdInfo::SharedCtor() {
sync_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SyncIdInfo::~SyncIdInfo() {
  // @@protoc_insertion_point(destructor:csce438.SyncIdInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SyncIdInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  sync_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SyncIdInfo::ArenaDtor(void* object) {
  SyncIdInfo* _this = reinterpret_cast< SyncIdInfo* >(object);
  (void)_this;
}
void SyncIdInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SyncIdInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SyncIdInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:csce438.SyncIdInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sync_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncIdInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sync_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_sync_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "csce438.SyncIdInfo.sync_id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SyncIdInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csce438.SyncIdInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sync_id = 1;
  if (!this->_internal_sync_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sync_id().data(), static_cast<int>(this->_internal_sync_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "csce438.SyncIdInfo.sync_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_sync_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csce438.SyncIdInfo)
  return target;
}

size_t SyncIdInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csce438.SyncIdInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sync_id = 1;
  if (!this->_internal_sync_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sync_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyncIdInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SyncIdInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyncIdInfo::GetClassData() const { return &_class_data_; }

void SyncIdInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SyncIdInfo *>(to)->MergeFrom(
      static_cast<const SyncIdInfo &>(from));
}


void SyncIdInfo::MergeFrom(const SyncIdInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:csce438.SyncIdInfo)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sync_id().empty()) {
    _internal_set_sync_id(from._internal_sync_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyncIdInfo::CopyFrom(const SyncIdInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csce438.SyncIdInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncIdInfo::IsInitialized() const {
  return true;
}

void SyncIdInfo::InternalSwap(SyncIdInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sync_id_, lhs_arena,
      &other->sync_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncIdInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_coord_2eproto_getter, &descriptor_table_coord_2eproto_once,
      file_level_metadata_coord_2eproto[8]);
}

// ===================================================================

class ClusterInfo::_Internal {
 public:
};

ClusterInfo::ClusterInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  cluster_clients_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:csce438.ClusterInfo)
}
ClusterInfo::ClusterInfo(const ClusterInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      cluster_clients_(from.cluster_clients_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:csce438.ClusterInfo)
}

void ClusterInfo::SharedCtor() {
}

ClusterInfo::~ClusterInfo() {
  // @@protoc_insertion_point(destructor:csce438.ClusterInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ClusterInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ClusterInfo::ArenaDtor(void* object) {
  ClusterInfo* _this = reinterpret_cast< ClusterInfo* >(object);
  (void)_this;
}
void ClusterInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClusterInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ClusterInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:csce438.ClusterInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cluster_clients_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClusterInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string cluster_clients = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_cluster_clients();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "csce438.ClusterInfo.cluster_clients"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClusterInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:csce438.ClusterInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string cluster_clients = 1;
  for (int i = 0, n = this->_internal_cluster_clients_size(); i < n; i++) {
    const auto& s = this->_internal_cluster_clients(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "csce438.ClusterInfo.cluster_clients");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:csce438.ClusterInfo)
  return target;
}

size_t ClusterInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:csce438.ClusterInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string cluster_clients = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(cluster_clients_.size());
  for (int i = 0, n = cluster_clients_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      cluster_clients_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ClusterInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ClusterInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ClusterInfo::GetClassData() const { return &_class_data_; }

void ClusterInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ClusterInfo *>(to)->MergeFrom(
      static_cast<const ClusterInfo &>(from));
}


void ClusterInfo::MergeFrom(const ClusterInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:csce438.ClusterInfo)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cluster_clients_.MergeFrom(from.cluster_clients_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ClusterInfo::CopyFrom(const ClusterInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:csce438.ClusterInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterInfo::IsInitialized() const {
  return true;
}

void ClusterInfo::InternalSwap(ClusterInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  cluster_clients_.InternalSwap(&other->cluster_clients_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClusterInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_coord_2eproto_getter, &descriptor_table_coord_2eproto_once,
      file_level_metadata_coord_2eproto[9]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace csce438
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::csce438::CoordRequest* Arena::CreateMaybeMessage< ::csce438::CoordRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::csce438::CoordRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::csce438::CoordReply* Arena::CreateMaybeMessage< ::csce438::CoordReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::csce438::CoordReply >(arena);
}
template<> PROTOBUF_NOINLINE ::csce438::CoordMessage* Arena::CreateMaybeMessage< ::csce438::CoordMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::csce438::CoordMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::csce438::MasterRequest* Arena::CreateMaybeMessage< ::csce438::MasterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::csce438::MasterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::csce438::MasterReply* Arena::CreateMaybeMessage< ::csce438::MasterReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::csce438::MasterReply >(arena);
}
template<> PROTOBUF_NOINLINE ::csce438::FollowerSyncRTInfo* Arena::CreateMaybeMessage< ::csce438::FollowerSyncRTInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::csce438::FollowerSyncRTInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::csce438::ClientInfo* Arena::CreateMaybeMessage< ::csce438::ClientInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::csce438::ClientInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::csce438::FollowerSyncInfo* Arena::CreateMaybeMessage< ::csce438::FollowerSyncInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::csce438::FollowerSyncInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::csce438::SyncIdInfo* Arena::CreateMaybeMessage< ::csce438::SyncIdInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::csce438::SyncIdInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::csce438::ClusterInfo* Arena::CreateMaybeMessage< ::csce438::ClusterInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::csce438::ClusterInfo >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
