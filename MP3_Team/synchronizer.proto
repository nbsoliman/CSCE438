// Copyright 2015, Google Inc.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * Neither the name of Google Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

syntax = "proto3";

package csce438;

import "google/protobuf/timestamp.proto";

// The messenger service definition.
service SNSSync{
  rpc InformFollow (FollowRequest) returns (FollowReply) {}
  
  rpc InformTimeline (stream SyncMessage) returns (stream SyncMessage) {}
  
  rpc AskForClients (ClientRequest) returns (ClientReply) {}
}

message FollowRequest {
  string username = 1;
  string follower = 2;
}

message FollowReply {
  string msg = 1;
}

message ClientRequest {
  string server_requester_id = 1;
  string server_replier_id = 2;
}

message ClientReply {
  repeated string clients = 1;
}

message SyncMessage {
  //Username who sent the message
  string username = 1;
  //Message from the user
  string msg = 2;
  //Time the message was sent
  //google.protobuf.Timestamp timestamp = 3;
  //Followers of username who sent the message
  repeated string followers = 4;
}
