// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: coord.proto
#ifndef GRPC_coord_2eproto__INCLUDED
#define GRPC_coord_2eproto__INCLUDED

#include "coord.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace csce438 {

class SNSCoord final {
 public:
  static constexpr char const* service_full_name() {
    return "csce438.SNSCoord";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status Access(::grpc::ClientContext* context, const ::csce438::CoordRequest& request, ::csce438::CoordReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::csce438::CoordReply>> AsyncAccess(::grpc::ClientContext* context, const ::csce438::CoordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::csce438::CoordReply>>(AsyncAccessRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::csce438::CoordReply>> PrepareAsyncAccess(::grpc::ClientContext* context, const ::csce438::CoordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::csce438::CoordReply>>(PrepareAsyncAccessRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderWriterInterface< ::csce438::CoordMessage, ::csce438::CoordMessage>> Heartbeat(::grpc::ClientContext* context) {
      return std::unique_ptr< ::grpc::ClientReaderWriterInterface< ::csce438::CoordMessage, ::csce438::CoordMessage>>(HeartbeatRaw(context));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::csce438::CoordMessage, ::csce438::CoordMessage>> AsyncHeartbeat(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::csce438::CoordMessage, ::csce438::CoordMessage>>(AsyncHeartbeatRaw(context, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::csce438::CoordMessage, ::csce438::CoordMessage>> PrepareAsyncHeartbeat(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::csce438::CoordMessage, ::csce438::CoordMessage>>(PrepareAsyncHeartbeatRaw(context, cq));
    }
    virtual ::grpc::Status GetSlaveInfo(::grpc::ClientContext* context, const ::csce438::MasterRequest& request, ::csce438::MasterReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::csce438::MasterReply>> AsyncGetSlaveInfo(::grpc::ClientContext* context, const ::csce438::MasterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::csce438::MasterReply>>(AsyncGetSlaveInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::csce438::MasterReply>> PrepareAsyncGetSlaveInfo(::grpc::ClientContext* context, const ::csce438::MasterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::csce438::MasterReply>>(PrepareAsyncGetSlaveInfoRaw(context, request, cq));
    }
    virtual ::grpc::Status FillFollowerSyncRT(::grpc::ClientContext* context, const ::csce438::FollowerSyncRTInfo& request, ::csce438::SyncIdInfo* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::csce438::SyncIdInfo>> AsyncFillFollowerSyncRT(::grpc::ClientContext* context, const ::csce438::FollowerSyncRTInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::csce438::SyncIdInfo>>(AsyncFillFollowerSyncRTRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::csce438::SyncIdInfo>> PrepareAsyncFillFollowerSyncRT(::grpc::ClientContext* context, const ::csce438::FollowerSyncRTInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::csce438::SyncIdInfo>>(PrepareAsyncFillFollowerSyncRTRaw(context, request, cq));
    }
    virtual ::grpc::Status GetFollowerSyncInfo(::grpc::ClientContext* context, const ::csce438::ClientInfo& request, ::csce438::FollowerSyncInfo* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::csce438::FollowerSyncInfo>> AsyncGetFollowerSyncInfo(::grpc::ClientContext* context, const ::csce438::ClientInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::csce438::FollowerSyncInfo>>(AsyncGetFollowerSyncInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::csce438::FollowerSyncInfo>> PrepareAsyncGetFollowerSyncInfo(::grpc::ClientContext* context, const ::csce438::ClientInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::csce438::FollowerSyncInfo>>(PrepareAsyncGetFollowerSyncInfoRaw(context, request, cq));
    }
    virtual ::grpc::Status GetClusterInfo(::grpc::ClientContext* context, const ::csce438::SyncIdInfo& request, ::csce438::ClusterInfo* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::csce438::ClusterInfo>> AsyncGetClusterInfo(::grpc::ClientContext* context, const ::csce438::SyncIdInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::csce438::ClusterInfo>>(AsyncGetClusterInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::csce438::ClusterInfo>> PrepareAsyncGetClusterInfo(::grpc::ClientContext* context, const ::csce438::SyncIdInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::csce438::ClusterInfo>>(PrepareAsyncGetClusterInfoRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void Access(::grpc::ClientContext* context, const ::csce438::CoordRequest* request, ::csce438::CoordReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Access(::grpc::ClientContext* context, const ::csce438::CoordRequest* request, ::csce438::CoordReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Heartbeat(::grpc::ClientContext* context, ::grpc::ClientBidiReactor< ::csce438::CoordMessage,::csce438::CoordMessage>* reactor) = 0;
      virtual void GetSlaveInfo(::grpc::ClientContext* context, const ::csce438::MasterRequest* request, ::csce438::MasterReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetSlaveInfo(::grpc::ClientContext* context, const ::csce438::MasterRequest* request, ::csce438::MasterReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void FillFollowerSyncRT(::grpc::ClientContext* context, const ::csce438::FollowerSyncRTInfo* request, ::csce438::SyncIdInfo* response, std::function<void(::grpc::Status)>) = 0;
      virtual void FillFollowerSyncRT(::grpc::ClientContext* context, const ::csce438::FollowerSyncRTInfo* request, ::csce438::SyncIdInfo* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetFollowerSyncInfo(::grpc::ClientContext* context, const ::csce438::ClientInfo* request, ::csce438::FollowerSyncInfo* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetFollowerSyncInfo(::grpc::ClientContext* context, const ::csce438::ClientInfo* request, ::csce438::FollowerSyncInfo* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetClusterInfo(::grpc::ClientContext* context, const ::csce438::SyncIdInfo* request, ::csce438::ClusterInfo* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetClusterInfo(::grpc::ClientContext* context, const ::csce438::SyncIdInfo* request, ::csce438::ClusterInfo* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::csce438::CoordReply>* AsyncAccessRaw(::grpc::ClientContext* context, const ::csce438::CoordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::csce438::CoordReply>* PrepareAsyncAccessRaw(::grpc::ClientContext* context, const ::csce438::CoordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderWriterInterface< ::csce438::CoordMessage, ::csce438::CoordMessage>* HeartbeatRaw(::grpc::ClientContext* context) = 0;
    virtual ::grpc::ClientAsyncReaderWriterInterface< ::csce438::CoordMessage, ::csce438::CoordMessage>* AsyncHeartbeatRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderWriterInterface< ::csce438::CoordMessage, ::csce438::CoordMessage>* PrepareAsyncHeartbeatRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::csce438::MasterReply>* AsyncGetSlaveInfoRaw(::grpc::ClientContext* context, const ::csce438::MasterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::csce438::MasterReply>* PrepareAsyncGetSlaveInfoRaw(::grpc::ClientContext* context, const ::csce438::MasterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::csce438::SyncIdInfo>* AsyncFillFollowerSyncRTRaw(::grpc::ClientContext* context, const ::csce438::FollowerSyncRTInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::csce438::SyncIdInfo>* PrepareAsyncFillFollowerSyncRTRaw(::grpc::ClientContext* context, const ::csce438::FollowerSyncRTInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::csce438::FollowerSyncInfo>* AsyncGetFollowerSyncInfoRaw(::grpc::ClientContext* context, const ::csce438::ClientInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::csce438::FollowerSyncInfo>* PrepareAsyncGetFollowerSyncInfoRaw(::grpc::ClientContext* context, const ::csce438::ClientInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::csce438::ClusterInfo>* AsyncGetClusterInfoRaw(::grpc::ClientContext* context, const ::csce438::SyncIdInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::csce438::ClusterInfo>* PrepareAsyncGetClusterInfoRaw(::grpc::ClientContext* context, const ::csce438::SyncIdInfo& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status Access(::grpc::ClientContext* context, const ::csce438::CoordRequest& request, ::csce438::CoordReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::csce438::CoordReply>> AsyncAccess(::grpc::ClientContext* context, const ::csce438::CoordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::csce438::CoordReply>>(AsyncAccessRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::csce438::CoordReply>> PrepareAsyncAccess(::grpc::ClientContext* context, const ::csce438::CoordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::csce438::CoordReply>>(PrepareAsyncAccessRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderWriter< ::csce438::CoordMessage, ::csce438::CoordMessage>> Heartbeat(::grpc::ClientContext* context) {
      return std::unique_ptr< ::grpc::ClientReaderWriter< ::csce438::CoordMessage, ::csce438::CoordMessage>>(HeartbeatRaw(context));
    }
    std::unique_ptr<  ::grpc::ClientAsyncReaderWriter< ::csce438::CoordMessage, ::csce438::CoordMessage>> AsyncHeartbeat(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriter< ::csce438::CoordMessage, ::csce438::CoordMessage>>(AsyncHeartbeatRaw(context, cq, tag));
    }
    std::unique_ptr<  ::grpc::ClientAsyncReaderWriter< ::csce438::CoordMessage, ::csce438::CoordMessage>> PrepareAsyncHeartbeat(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriter< ::csce438::CoordMessage, ::csce438::CoordMessage>>(PrepareAsyncHeartbeatRaw(context, cq));
    }
    ::grpc::Status GetSlaveInfo(::grpc::ClientContext* context, const ::csce438::MasterRequest& request, ::csce438::MasterReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::csce438::MasterReply>> AsyncGetSlaveInfo(::grpc::ClientContext* context, const ::csce438::MasterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::csce438::MasterReply>>(AsyncGetSlaveInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::csce438::MasterReply>> PrepareAsyncGetSlaveInfo(::grpc::ClientContext* context, const ::csce438::MasterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::csce438::MasterReply>>(PrepareAsyncGetSlaveInfoRaw(context, request, cq));
    }
    ::grpc::Status FillFollowerSyncRT(::grpc::ClientContext* context, const ::csce438::FollowerSyncRTInfo& request, ::csce438::SyncIdInfo* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::csce438::SyncIdInfo>> AsyncFillFollowerSyncRT(::grpc::ClientContext* context, const ::csce438::FollowerSyncRTInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::csce438::SyncIdInfo>>(AsyncFillFollowerSyncRTRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::csce438::SyncIdInfo>> PrepareAsyncFillFollowerSyncRT(::grpc::ClientContext* context, const ::csce438::FollowerSyncRTInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::csce438::SyncIdInfo>>(PrepareAsyncFillFollowerSyncRTRaw(context, request, cq));
    }
    ::grpc::Status GetFollowerSyncInfo(::grpc::ClientContext* context, const ::csce438::ClientInfo& request, ::csce438::FollowerSyncInfo* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::csce438::FollowerSyncInfo>> AsyncGetFollowerSyncInfo(::grpc::ClientContext* context, const ::csce438::ClientInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::csce438::FollowerSyncInfo>>(AsyncGetFollowerSyncInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::csce438::FollowerSyncInfo>> PrepareAsyncGetFollowerSyncInfo(::grpc::ClientContext* context, const ::csce438::ClientInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::csce438::FollowerSyncInfo>>(PrepareAsyncGetFollowerSyncInfoRaw(context, request, cq));
    }
    ::grpc::Status GetClusterInfo(::grpc::ClientContext* context, const ::csce438::SyncIdInfo& request, ::csce438::ClusterInfo* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::csce438::ClusterInfo>> AsyncGetClusterInfo(::grpc::ClientContext* context, const ::csce438::SyncIdInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::csce438::ClusterInfo>>(AsyncGetClusterInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::csce438::ClusterInfo>> PrepareAsyncGetClusterInfo(::grpc::ClientContext* context, const ::csce438::SyncIdInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::csce438::ClusterInfo>>(PrepareAsyncGetClusterInfoRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void Access(::grpc::ClientContext* context, const ::csce438::CoordRequest* request, ::csce438::CoordReply* response, std::function<void(::grpc::Status)>) override;
      void Access(::grpc::ClientContext* context, const ::csce438::CoordRequest* request, ::csce438::CoordReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Heartbeat(::grpc::ClientContext* context, ::grpc::ClientBidiReactor< ::csce438::CoordMessage,::csce438::CoordMessage>* reactor) override;
      void GetSlaveInfo(::grpc::ClientContext* context, const ::csce438::MasterRequest* request, ::csce438::MasterReply* response, std::function<void(::grpc::Status)>) override;
      void GetSlaveInfo(::grpc::ClientContext* context, const ::csce438::MasterRequest* request, ::csce438::MasterReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      void FillFollowerSyncRT(::grpc::ClientContext* context, const ::csce438::FollowerSyncRTInfo* request, ::csce438::SyncIdInfo* response, std::function<void(::grpc::Status)>) override;
      void FillFollowerSyncRT(::grpc::ClientContext* context, const ::csce438::FollowerSyncRTInfo* request, ::csce438::SyncIdInfo* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetFollowerSyncInfo(::grpc::ClientContext* context, const ::csce438::ClientInfo* request, ::csce438::FollowerSyncInfo* response, std::function<void(::grpc::Status)>) override;
      void GetFollowerSyncInfo(::grpc::ClientContext* context, const ::csce438::ClientInfo* request, ::csce438::FollowerSyncInfo* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetClusterInfo(::grpc::ClientContext* context, const ::csce438::SyncIdInfo* request, ::csce438::ClusterInfo* response, std::function<void(::grpc::Status)>) override;
      void GetClusterInfo(::grpc::ClientContext* context, const ::csce438::SyncIdInfo* request, ::csce438::ClusterInfo* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::csce438::CoordReply>* AsyncAccessRaw(::grpc::ClientContext* context, const ::csce438::CoordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::csce438::CoordReply>* PrepareAsyncAccessRaw(::grpc::ClientContext* context, const ::csce438::CoordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReaderWriter< ::csce438::CoordMessage, ::csce438::CoordMessage>* HeartbeatRaw(::grpc::ClientContext* context) override;
    ::grpc::ClientAsyncReaderWriter< ::csce438::CoordMessage, ::csce438::CoordMessage>* AsyncHeartbeatRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReaderWriter< ::csce438::CoordMessage, ::csce438::CoordMessage>* PrepareAsyncHeartbeatRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::csce438::MasterReply>* AsyncGetSlaveInfoRaw(::grpc::ClientContext* context, const ::csce438::MasterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::csce438::MasterReply>* PrepareAsyncGetSlaveInfoRaw(::grpc::ClientContext* context, const ::csce438::MasterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::csce438::SyncIdInfo>* AsyncFillFollowerSyncRTRaw(::grpc::ClientContext* context, const ::csce438::FollowerSyncRTInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::csce438::SyncIdInfo>* PrepareAsyncFillFollowerSyncRTRaw(::grpc::ClientContext* context, const ::csce438::FollowerSyncRTInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::csce438::FollowerSyncInfo>* AsyncGetFollowerSyncInfoRaw(::grpc::ClientContext* context, const ::csce438::ClientInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::csce438::FollowerSyncInfo>* PrepareAsyncGetFollowerSyncInfoRaw(::grpc::ClientContext* context, const ::csce438::ClientInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::csce438::ClusterInfo>* AsyncGetClusterInfoRaw(::grpc::ClientContext* context, const ::csce438::SyncIdInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::csce438::ClusterInfo>* PrepareAsyncGetClusterInfoRaw(::grpc::ClientContext* context, const ::csce438::SyncIdInfo& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_Access_;
    const ::grpc::internal::RpcMethod rpcmethod_Heartbeat_;
    const ::grpc::internal::RpcMethod rpcmethod_GetSlaveInfo_;
    const ::grpc::internal::RpcMethod rpcmethod_FillFollowerSyncRT_;
    const ::grpc::internal::RpcMethod rpcmethod_GetFollowerSyncInfo_;
    const ::grpc::internal::RpcMethod rpcmethod_GetClusterInfo_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status Access(::grpc::ServerContext* context, const ::csce438::CoordRequest* request, ::csce438::CoordReply* response);
    virtual ::grpc::Status Heartbeat(::grpc::ServerContext* context, ::grpc::ServerReaderWriter< ::csce438::CoordMessage, ::csce438::CoordMessage>* stream);
    virtual ::grpc::Status GetSlaveInfo(::grpc::ServerContext* context, const ::csce438::MasterRequest* request, ::csce438::MasterReply* response);
    virtual ::grpc::Status FillFollowerSyncRT(::grpc::ServerContext* context, const ::csce438::FollowerSyncRTInfo* request, ::csce438::SyncIdInfo* response);
    virtual ::grpc::Status GetFollowerSyncInfo(::grpc::ServerContext* context, const ::csce438::ClientInfo* request, ::csce438::FollowerSyncInfo* response);
    virtual ::grpc::Status GetClusterInfo(::grpc::ServerContext* context, const ::csce438::SyncIdInfo* request, ::csce438::ClusterInfo* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_Access : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Access() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_Access() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Access(::grpc::ServerContext* /*context*/, const ::csce438::CoordRequest* /*request*/, ::csce438::CoordReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAccess(::grpc::ServerContext* context, ::csce438::CoordRequest* request, ::grpc::ServerAsyncResponseWriter< ::csce438::CoordReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Heartbeat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Heartbeat() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_Heartbeat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Heartbeat(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::csce438::CoordMessage, ::csce438::CoordMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestHeartbeat(::grpc::ServerContext* context, ::grpc::ServerAsyncReaderWriter< ::csce438::CoordMessage, ::csce438::CoordMessage>* stream, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncBidiStreaming(1, context, stream, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetSlaveInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetSlaveInfo() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetSlaveInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSlaveInfo(::grpc::ServerContext* /*context*/, const ::csce438::MasterRequest* /*request*/, ::csce438::MasterReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSlaveInfo(::grpc::ServerContext* context, ::csce438::MasterRequest* request, ::grpc::ServerAsyncResponseWriter< ::csce438::MasterReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_FillFollowerSyncRT : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_FillFollowerSyncRT() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_FillFollowerSyncRT() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FillFollowerSyncRT(::grpc::ServerContext* /*context*/, const ::csce438::FollowerSyncRTInfo* /*request*/, ::csce438::SyncIdInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFillFollowerSyncRT(::grpc::ServerContext* context, ::csce438::FollowerSyncRTInfo* request, ::grpc::ServerAsyncResponseWriter< ::csce438::SyncIdInfo>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetFollowerSyncInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetFollowerSyncInfo() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_GetFollowerSyncInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFollowerSyncInfo(::grpc::ServerContext* /*context*/, const ::csce438::ClientInfo* /*request*/, ::csce438::FollowerSyncInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetFollowerSyncInfo(::grpc::ServerContext* context, ::csce438::ClientInfo* request, ::grpc::ServerAsyncResponseWriter< ::csce438::FollowerSyncInfo>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetClusterInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetClusterInfo() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_GetClusterInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetClusterInfo(::grpc::ServerContext* /*context*/, const ::csce438::SyncIdInfo* /*request*/, ::csce438::ClusterInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetClusterInfo(::grpc::ServerContext* context, ::csce438::SyncIdInfo* request, ::grpc::ServerAsyncResponseWriter< ::csce438::ClusterInfo>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_Access<WithAsyncMethod_Heartbeat<WithAsyncMethod_GetSlaveInfo<WithAsyncMethod_FillFollowerSyncRT<WithAsyncMethod_GetFollowerSyncInfo<WithAsyncMethod_GetClusterInfo<Service > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_Access : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Access() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::csce438::CoordRequest, ::csce438::CoordReply>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::csce438::CoordRequest* request, ::csce438::CoordReply* response) { return this->Access(context, request, response); }));}
    void SetMessageAllocatorFor_Access(
        ::grpc::MessageAllocator< ::csce438::CoordRequest, ::csce438::CoordReply>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::csce438::CoordRequest, ::csce438::CoordReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Access() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Access(::grpc::ServerContext* /*context*/, const ::csce438::CoordRequest* /*request*/, ::csce438::CoordReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Access(
      ::grpc::CallbackServerContext* /*context*/, const ::csce438::CoordRequest* /*request*/, ::csce438::CoordReply* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Heartbeat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Heartbeat() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackBidiHandler< ::csce438::CoordMessage, ::csce438::CoordMessage>(
            [this](
                   ::grpc::CallbackServerContext* context) { return this->Heartbeat(context); }));
    }
    ~WithCallbackMethod_Heartbeat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Heartbeat(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::csce438::CoordMessage, ::csce438::CoordMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerBidiReactor< ::csce438::CoordMessage, ::csce438::CoordMessage>* Heartbeat(
      ::grpc::CallbackServerContext* /*context*/)
      { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetSlaveInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetSlaveInfo() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::csce438::MasterRequest, ::csce438::MasterReply>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::csce438::MasterRequest* request, ::csce438::MasterReply* response) { return this->GetSlaveInfo(context, request, response); }));}
    void SetMessageAllocatorFor_GetSlaveInfo(
        ::grpc::MessageAllocator< ::csce438::MasterRequest, ::csce438::MasterReply>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::csce438::MasterRequest, ::csce438::MasterReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetSlaveInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSlaveInfo(::grpc::ServerContext* /*context*/, const ::csce438::MasterRequest* /*request*/, ::csce438::MasterReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSlaveInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::csce438::MasterRequest* /*request*/, ::csce438::MasterReply* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_FillFollowerSyncRT : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_FillFollowerSyncRT() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::csce438::FollowerSyncRTInfo, ::csce438::SyncIdInfo>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::csce438::FollowerSyncRTInfo* request, ::csce438::SyncIdInfo* response) { return this->FillFollowerSyncRT(context, request, response); }));}
    void SetMessageAllocatorFor_FillFollowerSyncRT(
        ::grpc::MessageAllocator< ::csce438::FollowerSyncRTInfo, ::csce438::SyncIdInfo>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::csce438::FollowerSyncRTInfo, ::csce438::SyncIdInfo>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_FillFollowerSyncRT() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FillFollowerSyncRT(::grpc::ServerContext* /*context*/, const ::csce438::FollowerSyncRTInfo* /*request*/, ::csce438::SyncIdInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FillFollowerSyncRT(
      ::grpc::CallbackServerContext* /*context*/, const ::csce438::FollowerSyncRTInfo* /*request*/, ::csce438::SyncIdInfo* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetFollowerSyncInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetFollowerSyncInfo() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::csce438::ClientInfo, ::csce438::FollowerSyncInfo>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::csce438::ClientInfo* request, ::csce438::FollowerSyncInfo* response) { return this->GetFollowerSyncInfo(context, request, response); }));}
    void SetMessageAllocatorFor_GetFollowerSyncInfo(
        ::grpc::MessageAllocator< ::csce438::ClientInfo, ::csce438::FollowerSyncInfo>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::csce438::ClientInfo, ::csce438::FollowerSyncInfo>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetFollowerSyncInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFollowerSyncInfo(::grpc::ServerContext* /*context*/, const ::csce438::ClientInfo* /*request*/, ::csce438::FollowerSyncInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetFollowerSyncInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::csce438::ClientInfo* /*request*/, ::csce438::FollowerSyncInfo* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetClusterInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetClusterInfo() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::csce438::SyncIdInfo, ::csce438::ClusterInfo>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::csce438::SyncIdInfo* request, ::csce438::ClusterInfo* response) { return this->GetClusterInfo(context, request, response); }));}
    void SetMessageAllocatorFor_GetClusterInfo(
        ::grpc::MessageAllocator< ::csce438::SyncIdInfo, ::csce438::ClusterInfo>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::csce438::SyncIdInfo, ::csce438::ClusterInfo>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetClusterInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetClusterInfo(::grpc::ServerContext* /*context*/, const ::csce438::SyncIdInfo* /*request*/, ::csce438::ClusterInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetClusterInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::csce438::SyncIdInfo* /*request*/, ::csce438::ClusterInfo* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_Access<WithCallbackMethod_Heartbeat<WithCallbackMethod_GetSlaveInfo<WithCallbackMethod_FillFollowerSyncRT<WithCallbackMethod_GetFollowerSyncInfo<WithCallbackMethod_GetClusterInfo<Service > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_Access : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Access() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_Access() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Access(::grpc::ServerContext* /*context*/, const ::csce438::CoordRequest* /*request*/, ::csce438::CoordReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Heartbeat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Heartbeat() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_Heartbeat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Heartbeat(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::csce438::CoordMessage, ::csce438::CoordMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetSlaveInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetSlaveInfo() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetSlaveInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSlaveInfo(::grpc::ServerContext* /*context*/, const ::csce438::MasterRequest* /*request*/, ::csce438::MasterReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_FillFollowerSyncRT : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_FillFollowerSyncRT() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_FillFollowerSyncRT() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FillFollowerSyncRT(::grpc::ServerContext* /*context*/, const ::csce438::FollowerSyncRTInfo* /*request*/, ::csce438::SyncIdInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetFollowerSyncInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetFollowerSyncInfo() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_GetFollowerSyncInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFollowerSyncInfo(::grpc::ServerContext* /*context*/, const ::csce438::ClientInfo* /*request*/, ::csce438::FollowerSyncInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetClusterInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetClusterInfo() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_GetClusterInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetClusterInfo(::grpc::ServerContext* /*context*/, const ::csce438::SyncIdInfo* /*request*/, ::csce438::ClusterInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_Access : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Access() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_Access() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Access(::grpc::ServerContext* /*context*/, const ::csce438::CoordRequest* /*request*/, ::csce438::CoordReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAccess(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Heartbeat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Heartbeat() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_Heartbeat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Heartbeat(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::csce438::CoordMessage, ::csce438::CoordMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestHeartbeat(::grpc::ServerContext* context, ::grpc::ServerAsyncReaderWriter< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* stream, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncBidiStreaming(1, context, stream, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetSlaveInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetSlaveInfo() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GetSlaveInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSlaveInfo(::grpc::ServerContext* /*context*/, const ::csce438::MasterRequest* /*request*/, ::csce438::MasterReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSlaveInfo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_FillFollowerSyncRT : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_FillFollowerSyncRT() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_FillFollowerSyncRT() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FillFollowerSyncRT(::grpc::ServerContext* /*context*/, const ::csce438::FollowerSyncRTInfo* /*request*/, ::csce438::SyncIdInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFillFollowerSyncRT(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetFollowerSyncInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetFollowerSyncInfo() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_GetFollowerSyncInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFollowerSyncInfo(::grpc::ServerContext* /*context*/, const ::csce438::ClientInfo* /*request*/, ::csce438::FollowerSyncInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetFollowerSyncInfo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetClusterInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetClusterInfo() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_GetClusterInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetClusterInfo(::grpc::ServerContext* /*context*/, const ::csce438::SyncIdInfo* /*request*/, ::csce438::ClusterInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetClusterInfo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Access : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Access() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Access(context, request, response); }));
    }
    ~WithRawCallbackMethod_Access() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Access(::grpc::ServerContext* /*context*/, const ::csce438::CoordRequest* /*request*/, ::csce438::CoordReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Access(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Heartbeat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Heartbeat() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackBidiHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context) { return this->Heartbeat(context); }));
    }
    ~WithRawCallbackMethod_Heartbeat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Heartbeat(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::csce438::CoordMessage, ::csce438::CoordMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerBidiReactor< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* Heartbeat(
      ::grpc::CallbackServerContext* /*context*/)
      { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetSlaveInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetSlaveInfo() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetSlaveInfo(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetSlaveInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSlaveInfo(::grpc::ServerContext* /*context*/, const ::csce438::MasterRequest* /*request*/, ::csce438::MasterReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSlaveInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_FillFollowerSyncRT : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_FillFollowerSyncRT() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->FillFollowerSyncRT(context, request, response); }));
    }
    ~WithRawCallbackMethod_FillFollowerSyncRT() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FillFollowerSyncRT(::grpc::ServerContext* /*context*/, const ::csce438::FollowerSyncRTInfo* /*request*/, ::csce438::SyncIdInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FillFollowerSyncRT(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetFollowerSyncInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetFollowerSyncInfo() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetFollowerSyncInfo(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetFollowerSyncInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFollowerSyncInfo(::grpc::ServerContext* /*context*/, const ::csce438::ClientInfo* /*request*/, ::csce438::FollowerSyncInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetFollowerSyncInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetClusterInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetClusterInfo() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetClusterInfo(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetClusterInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetClusterInfo(::grpc::ServerContext* /*context*/, const ::csce438::SyncIdInfo* /*request*/, ::csce438::ClusterInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetClusterInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Access : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Access() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::csce438::CoordRequest, ::csce438::CoordReply>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::csce438::CoordRequest, ::csce438::CoordReply>* streamer) {
                       return this->StreamedAccess(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Access() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Access(::grpc::ServerContext* /*context*/, const ::csce438::CoordRequest* /*request*/, ::csce438::CoordReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAccess(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::csce438::CoordRequest,::csce438::CoordReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetSlaveInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetSlaveInfo() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::csce438::MasterRequest, ::csce438::MasterReply>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::csce438::MasterRequest, ::csce438::MasterReply>* streamer) {
                       return this->StreamedGetSlaveInfo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetSlaveInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetSlaveInfo(::grpc::ServerContext* /*context*/, const ::csce438::MasterRequest* /*request*/, ::csce438::MasterReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetSlaveInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::csce438::MasterRequest,::csce438::MasterReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_FillFollowerSyncRT : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_FillFollowerSyncRT() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::csce438::FollowerSyncRTInfo, ::csce438::SyncIdInfo>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::csce438::FollowerSyncRTInfo, ::csce438::SyncIdInfo>* streamer) {
                       return this->StreamedFillFollowerSyncRT(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_FillFollowerSyncRT() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status FillFollowerSyncRT(::grpc::ServerContext* /*context*/, const ::csce438::FollowerSyncRTInfo* /*request*/, ::csce438::SyncIdInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFillFollowerSyncRT(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::csce438::FollowerSyncRTInfo,::csce438::SyncIdInfo>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetFollowerSyncInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetFollowerSyncInfo() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::csce438::ClientInfo, ::csce438::FollowerSyncInfo>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::csce438::ClientInfo, ::csce438::FollowerSyncInfo>* streamer) {
                       return this->StreamedGetFollowerSyncInfo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetFollowerSyncInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetFollowerSyncInfo(::grpc::ServerContext* /*context*/, const ::csce438::ClientInfo* /*request*/, ::csce438::FollowerSyncInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetFollowerSyncInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::csce438::ClientInfo,::csce438::FollowerSyncInfo>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetClusterInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetClusterInfo() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::csce438::SyncIdInfo, ::csce438::ClusterInfo>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::csce438::SyncIdInfo, ::csce438::ClusterInfo>* streamer) {
                       return this->StreamedGetClusterInfo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetClusterInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetClusterInfo(::grpc::ServerContext* /*context*/, const ::csce438::SyncIdInfo* /*request*/, ::csce438::ClusterInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetClusterInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::csce438::SyncIdInfo,::csce438::ClusterInfo>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_Access<WithStreamedUnaryMethod_GetSlaveInfo<WithStreamedUnaryMethod_FillFollowerSyncRT<WithStreamedUnaryMethod_GetFollowerSyncInfo<WithStreamedUnaryMethod_GetClusterInfo<Service > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_Access<WithStreamedUnaryMethod_GetSlaveInfo<WithStreamedUnaryMethod_FillFollowerSyncRT<WithStreamedUnaryMethod_GetFollowerSyncInfo<WithStreamedUnaryMethod_GetClusterInfo<Service > > > > > StreamedService;
};

}  // namespace csce438


#endif  // GRPC_coord_2eproto__INCLUDED
